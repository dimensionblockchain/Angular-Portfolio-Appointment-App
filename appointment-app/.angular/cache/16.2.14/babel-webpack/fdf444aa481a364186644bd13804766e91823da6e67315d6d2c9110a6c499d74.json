{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppointmentListComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementStart(3, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AppointmentListComponent_li_6_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deleteAppointment(i_r2));\n    });\n    i0.ɵɵtext(4, \"Delete Appointment\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const appointment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", appointment_r1.title, \" \", i0.ɵɵpipeBind2(2, 2, appointment_r1.date, \"MM.dd.yyyy\"), \" \");\n  }\n}\nexport class AppointmentListComponent {\n  constructor() {\n    this.newAppointmentTitle = '';\n    this.newAppointmentDate = new Date();\n    this.appointments = [];\n  }\n  /**\n   * How to push/add to an array\n   */\n  addAppointment() {\n    if (this.newAppointmentTitle.trim().length && this.newAppointmentDate) {\n      let newAppointment = {\n        id: Date.now(),\n        title: this.newAppointmentTitle,\n        date: this.newAppointmentDate\n      };\n      this.appointments.push(newAppointment);\n      this.newAppointmentTitle = '';\n      this.newAppointmentDate = new Date();\n      localStorage.setItem('appointments', JSON.stringify(this.appointments)); // saves entire array locally\n    }\n  }\n  /**\n   * How to delete from an array\n   */\n  deleteAppointment(index) {\n    this.appointments.splice(index, 1);\n    localStorage.setItem('appointments', JSON.stringify(this.appointments));\n  }\n  static #_ = this.ɵfac = function AppointmentListComponent_Factory(t) {\n    return new (t || AppointmentListComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppointmentListComponent,\n    selectors: [[\"app-appointment-list\"]],\n    decls: 7,\n    vars: 3,\n    consts: [[\"placeholder\", \"Appointment Description\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"placeholder\", \"Appointment Date\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function AppointmentListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function AppointmentListComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.newAppointmentTitle = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function AppointmentListComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.newAppointmentDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AppointmentListComponent_Template_button_click_3_listener() {\n          return ctx.addAppointment();\n        });\n        i0.ɵɵtext(4, \"Add\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ul\");\n        i0.ɵɵtemplate(6, AppointmentListComponent_li_6_Template, 5, 5, \"li\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.newAppointmentTitle);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.newAppointmentDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.appointments);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i1.DatePipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵlistener","AppointmentListComponent_li_6_Template_button_click_3_listener","restoredCtx","ɵɵrestoreView","_r4","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","deleteAppointment","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","appointment_r1","title","ɵɵpipeBind2","date","AppointmentListComponent","constructor","newAppointmentTitle","newAppointmentDate","Date","appointments","addAppointment","trim","length","newAppointment","id","now","push","localStorage","setItem","JSON","stringify","splice","_","_2","selectors","decls","vars","consts","template","AppointmentListComponent_Template","rf","ctx","AppointmentListComponent_Template_input_ngModelChange_1_listener","$event","AppointmentListComponent_Template_input_ngModelChange_2_listener","AppointmentListComponent_Template_button_click_3_listener","ɵɵtemplate","AppointmentListComponent_li_6_Template","ɵɵproperty"],"sources":["C:\\Users\\scott\\Documents\\angular-course\\appointment-app\\src\\app\\appointment-list\\appointment-list.component.ts","C:\\Users\\scott\\Documents\\angular-course\\appointment-app\\src\\app\\appointment-list\\appointment-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Appointment } from '../models/appointment';\nimport\n\n\n@Component({\n  selector: 'app-appointment-list',\n  templateUrl: './appointment-list.component.html',\n  styleUrls: ['./appointment-list.component.css'],\n})\nexport class AppointmentListComponent {\n  newAppointmentTitle: string = '';\n\n  newAppointmentDate: Date = new Date();\n\n  appointments: Appointment[] = [];\n\n  /**\n   * How to push/add to an array\n   */\n\n  addAppointment() {\n    if (this.newAppointmentTitle.trim().length && this.newAppointmentDate) {\n      let newAppointment: Appointment = {\n        id: Date.now(),\n        title: this.newAppointmentTitle,\n        date: this.newAppointmentDate,\n      };\n\n      this.appointments.push(newAppointment);\n\n      this.newAppointmentTitle = '';\n      this.newAppointmentDate = new Date();\n\n      localStorage.setItem('appointments', JSON.stringify(this.appointments)); // saves entire array locally\n    }\n  }\n\n  /**\n   * How to delete from an array\n   */\n\n  deleteAppointment(index: number) {\n    this.appointments.splice(index, 1);\n    localStorage.setItem('appointments', JSON.stringify(this.appointments));\n  }\n}\n","<div>\n  <input\n    [(ngModel)]=\"newAppointmentTitle\"\n    placeholder=\"Appointment Description\"\n  />\n  <input\n    [(ngModel)]=\"newAppointmentDate\"\n    type=\"date\"\n    placeholder=\"Appointment Date\"\n  />\n  <button (click)=\"addAppointment()\">Add</button>\n</div>\n\n<ul>\n  <li *ngFor=\"let appointment of appointments; index as i\">\n    {{ appointment.title }}\n    {{ appointment.date | date : \"MM.dd.yyyy\" }}\n    <button (click)=\"deleteAppointment(i)\" >Delete Appointment</button>\n  </li>\n</ul>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}